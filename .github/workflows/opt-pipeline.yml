# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/learn-github-actions or https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# branches: [ master ]
# old-school build and jar method. No tests run or compiled.
# build against supported Java LTS versions:
# build against supported Java LTS versions:
# build against supported Java LTS versions:
# build against supported Java LTS versions:

name: Modified Java CI with Maven
jobs:
  build-1_6:
    name: build-1_6
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-1_6.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/JSON-java/JSON-java', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: 1.6
    - run: touch optcd-4.txt
    - name: Compile Java 1.6
      run: |-
        mkdir -p target/classes
        javac -version
        javac -source 1.6 -target 1.6 -d target/classes/ src/main/java/org/json/*.java
    - run: touch optcd-5.txt
    - name: Create java 1.6 JAR
      run: |-
        jar cvf target/org.json.jar -C target/classes .
    - run: touch optcd-6.txt
    - name: Upload JAR 1.6
      uses: actions/upload-artifact@v3
      with:
        name: Create java 1.6 JAR
        path: target/*.jar
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-1_6
        path: /home/runner/inotifywait-log-build-1_6.csv
  build-8:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        java:
        - 8
    name: build-8 (${{ matrix.java }})
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-8 (${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/JSON-java/JSON-java', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
        cache: maven
    - run: touch optcd-4.txt
    - name: Compile Java ${{ matrix.java }}
      run: mvn clean compile -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true -D maven.javadoc.skip=true
    - run: touch optcd-5.txt
    - name: Run Tests ${{ matrix.java }}
      run: |-
        mvn test -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-6.txt
    - name: Build Test Report ${{ matrix.java }}
      run: |-
        mvn surefire-report:report-only -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
        mvn site -D generateReports=false -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-7.txt
    - name: Upload Test Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Results ${{ matrix.java }}
        path: target/surefire-reports/
    - run: touch optcd-8.txt
    - name: Upload Test Report ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Report ${{ matrix.java }}
        path: target/site/
    - run: touch optcd-9.txt
    - name: Package Jar ${{ matrix.java }}
      run: mvn clean package -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true
    - run: touch optcd-10.txt
    - name: Upload Package Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Package Jar ${{ matrix.java }}
        path: target/*.jar
    - run: touch optcd-11.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-8 (${{ matrix.java }})
        path: /home/runner/inotifywait-log-build-8 (${{ matrix.java }}).csv
  build-11:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        java:
        - 11
    name: build-11 (${{ matrix.java }})
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-11 (${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/JSON-java/JSON-java', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
        cache: maven
    - run: touch optcd-4.txt
    - name: Compile Java ${{ matrix.java }}
      run: mvn clean compile -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true -D maven.javadoc.skip=true
    - run: touch optcd-5.txt
    - name: Run Tests ${{ matrix.java }}
      run: |-
        mvn test -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-6.txt
    - name: Build Test Report ${{ matrix.java }}
      run: |-
        mvn surefire-report:report-only -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
        mvn site -D generateReports=false -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-7.txt
    - name: Upload Test Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Results ${{ matrix.java }}
        path: target/surefire-reports/
    - run: touch optcd-8.txt
    - name: Upload Test Report ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Report ${{ matrix.java }}
        path: target/site/
    - run: touch optcd-9.txt
    - name: Package Jar ${{ matrix.java }}
      run: mvn clean package -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true
    - run: touch optcd-10.txt
    - name: Upload Package Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Package Jar ${{ matrix.java }}
        path: target/*.jar
    - run: touch optcd-11.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-11 (${{ matrix.java }})
        path: /home/runner/inotifywait-log-build-11 (${{ matrix.java }}).csv
  build-17:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        java:
        - 17
    name: build-17 (${{ matrix.java }})
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-17 (${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/JSON-java/JSON-java', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
        cache: maven
    - run: touch optcd-4.txt
    - name: Compile Java ${{ matrix.java }}
      run: mvn clean compile -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true -D maven.javadoc.skip=true
    - run: touch optcd-5.txt
    - name: Run Tests ${{ matrix.java }}
      run: |-
        mvn test -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-6.txt
    - name: Build Test Report ${{ matrix.java }}
      run: |-
        mvn surefire-report:report-only -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
        mvn site -D generateReports=false -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-7.txt
    - name: Upload Test Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Results ${{ matrix.java }}
        path: target/surefire-reports/
    - run: touch optcd-8.txt
    - name: Upload Test Report ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Report ${{ matrix.java }}
        path: target/site/
    - run: touch optcd-9.txt
    - name: Package Jar ${{ matrix.java }}
      run: mvn clean package -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true
    - run: touch optcd-10.txt
    - name: Upload Package Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Package Jar ${{ matrix.java }}
        path: target/*.jar
    - run: touch optcd-11.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-17 (${{ matrix.java }})
        path: /home/runner/inotifywait-log-build-17 (${{ matrix.java }}).csv
  build-21:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        java:
        - 21
    name: build-21 (${{ matrix.java }})
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-21 (${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/JSON-java/JSON-java', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
        cache: maven
    - run: touch optcd-4.txt
    - name: Compile Java ${{ matrix.java }}
      run: mvn clean compile -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true -D maven.javadoc.skip=true
    - run: touch optcd-5.txt
    - name: Run Tests ${{ matrix.java }}
      run: |-
        mvn test -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-6.txt
    - name: Build Test Report ${{ matrix.java }}
      run: |-
        mvn surefire-report:report-only -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
        mvn site -D generateReports=false -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{ matrix.java }}
    - run: touch optcd-7.txt
    - name: Upload Test Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Results ${{ matrix.java }}
        path: target/surefire-reports/
    - run: touch optcd-8.txt
    - name: Upload Test Report ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Test Report ${{ matrix.java }}
        path: target/site/
    - run: touch optcd-9.txt
    - name: Package Jar ${{ matrix.java }}
      run: mvn clean package -D maven.compiler.source=${{ matrix.java }} -D maven.compiler.target=${{
        matrix.java }} -D maven.test.skip=true -D maven.site.skip=true
    - run: touch optcd-10.txt
    - name: Upload Package Results ${{ matrix.java }}
      uses: actions/upload-artifact@v3
      with:
        name: Package Jar ${{ matrix.java }}
        path: target/*.jar
    - run: touch optcd-11.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-21 (${{ matrix.java }})
        path: /home/runner/inotifywait-log-build-21 (${{ matrix.java }}).csv
'on':
- push
- workflow_dispatch
